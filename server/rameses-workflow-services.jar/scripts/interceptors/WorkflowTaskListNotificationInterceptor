
import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;


public class WorkflowTaskListNotificationInterceptor {

	@DataContext(dynamic=true)
	def em;	

	@Service("WorkflowTaskService")
	def workflowTaskSvc;

	@Service("SchemaService")
	def schemaService;

	@DataContext(dynamic=true)
	def db;

	@Service(value='UserRoleService', connection="admin-server")
	def roleSvc;

	@Env
	def env;

	@After(pattern="WorkflowTaskListService.getNodeList") 
	public void afterGetNodes( def evt ) {
		def r = evt.args[0];
		def nodes = evt.result;

		def domain = r.domain;
		def orgid = env.ORGID;
		def userid = env.USERID;
		if (env.ORGROOT == 1) {
			orgid = null;
		}	

		def roles = roleSvc.getRolesByUser([userid: userid, orgid:orgid]); 
		if(roles) {
			roles = roles.findAll{ it.domain == r.domain };
		}
		def checkInRole = { o->
			if( o.role == null ) return true;
			return (roles.find{ v-> v.role==o.role  }!=null);
		}

		//determine which nodes to display
		def nodesToAlert = [];
		nodes.findAll{ it.tracktime == 1 }.each {
			if( checkInRole(it) ) nodesToAlert << it.name;
		}	

		def appEm = db.lookup( r._schemaname );

		def groupCount = [:];
		if(nodesToAlert) {
			def filterStates = " task.state IN ('" + nodesToAlert.join("','") + "') AND task.assignee.objid IS NULL AND task.enddate IS NULL";
			def param = [:];
			if( !r.where ) {
                r.where = [ filterStates ];
            }
            else {
                r.where[0] = filterStates + " AND " + r.where[0];
                if( r.where.length > 1 ) param = r.where[1];
            }
            
            def grpList = appEm.select( "task.state, icount:{COUNT(*)}"  ).where( r.where[0], param ).groupBy( "task.state" ).list();
            grpList.each { 
            	groupCount.put( it.task.state, it.icount );
            }
		}

		//finally loop each node to get the count per node
		nodes.each {
			if( it.name == 'mytask' ) {
				it.count = appEm.select("c:{COUNT(*)}").where("task.assignee.objid = :uid AND NOT(task.state = 'end') ", [uid: env.USERID]).val();
			}
			else {
				def scount = groupCount.get( it.name );
				if( scount ) it.count = scount;
			}
			//update the counter
			if( it.count > 0 ) {
				it.title = it.title + " (" + it.count + ")";
			}
		}

	}

}